{"version":3,"file":"static/js/507.3750258d.chunk.js","mappings":"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","sources":["screens/manage-liquidity/AddLiquidity.tsx","screens/manage-liquidity/RemoveLiquidity.tsx","screens/manage-liquidity/index.tsx","../node_modules/@mui/icons-material/AddRounded.js","../node_modules/@mui/icons-material/RemoveRounded.js"],"sourcesContent":["import { ton } from \"services/api/addresses\";\nimport { SvgIcon } from \"@mui/material\";\nimport TokenOperations from \"screens/components/TokenOperations\";\nimport * as API from \"services/api\";\nimport { ReactComponent as Plus } from \"assets/images/shared/plus.svg\";\nimport { useTokenOperationsStore } from \"store/token-operations/hooks\";\nimport useTokenFromParams from \"hooks/useTokenFromParams\";\nimport { ActionCategory, ActionType } from \"services/wallets/types\";\nimport BN from \"bn.js\";\nimport AddRoundedIcon from '@mui/icons-material/AddRounded';\n\nconst AddLiquidity = () => {\n  const { srcTokenAmount, destTokenAmount, selectedToken } =\n    useTokenOperationsStore();\n\n  const getTxRequest = () => {\n    if (selectedToken) {\n      return API.generateAddLiquidityLink(\n        selectedToken?.tokenMinter,\n        srcTokenAmount,\n        destTokenAmount\n      );\n    }\n  };\n\n  const getAmountOut = async (\n    srcToken: string,\n    destToken: string,\n    srcAmount: BN | null,\n    destAmount: BN | null\n  ) => {\n    if (!selectedToken?.name) {\n      return;\n    }\n    let data = await API.getPoolInfo(selectedToken?.tokenMinter);\n    console.log({ data });\n\n    if (\n      data.tokenReserves.toString() == \"0\" &&\n      data.tonReserves.toString() == \"0\"\n    ) {\n      return 0;\n    }\n\n    let res = await API.getLiquidityAmount(\n      srcToken,\n      destToken,\n      srcAmount,\n      destAmount\n    );\n    return res;\n  };\n\n  const getBalances = () => {\n    return Promise.all([\n      API.getTonBalance(),\n      API.getTokenBalance(selectedToken!!),\n    ]);\n  };\n\n  useTokenFromParams();\n\n  if (!selectedToken) {\n    return null;\n  }\n\n  return (\n    <TokenOperations\n      icon={<AddRoundedIcon />}\n      getAmountFunc={getAmountOut}\n      getBalances={getBalances}\n      srcToken={ton}\n      getTxRequest={getTxRequest}\n      destToken={selectedToken}\n      submitButtonText={`Add TON/${selectedToken?.displayName} liquidity`}\n      refreshAmountsOnActionChange={true}\n      actionCategory={ActionCategory.MANAGE_LIQUIDITY}\n      actionType={ActionType.ADD_LIQUIDITY}\n      gasFee={API.GAS_FEE.ADD_LIQUIDITY}\n    />\n  );\n};\n\nexport default AddLiquidity;\n","import { observer } from \"mobx-react\";\nimport TokenOperations from \"screens/components/TokenOperations\";\nimport * as API from \"services/api\";\nimport { SvgIcon, Typography } from \"@mui/material\";\nimport { ReactComponent as Minus } from \"assets/images/shared/minus.svg\";\n\nimport { ton } from \"services/api/addresses\";\nimport { useTokenOperationsStore } from \"store/token-operations/hooks\";\nimport useTokenFromParams from \"hooks/useTokenFromParams\";\nimport { ActionCategory, ActionType } from \"services/wallets/types\";\nimport RemoveRoundedIcon from '@mui/icons-material/RemoveRounded';\n\n\nconst RemoveLiquidity = () => {\n  const { srcTokenAmount, selectedToken } = useTokenOperationsStore();\n\n  const getTxRequest = () => {\n    return API.generateRemoveLiquidityLink(\n      selectedToken!.tokenMinter,\n      srcTokenAmount\n    );\n  };\n\n  const getBalances = () => {\n    return API.getTokensOfLPBalances(selectedToken!!.tokenMinter);\n  };\n\n  useTokenFromParams();\n\n\n\n  \n  if (!selectedToken) {\n    return null;\n  }\n\n  return (\n    <TokenOperations\n      icon={<RemoveRoundedIcon />}\n      getTxRequest={getTxRequest}\n      getAmountFunc={API.getLiquidityAmount}\n      getBalances={getBalances}\n      srcToken={ton}\n      destToken={selectedToken}\n      submitButtonText={`Remove TON/${selectedToken?.displayName} liquidity`}\n      refreshAmountsOnActionChange={true}\n      actionCategory={ActionCategory.MANAGE_LIQUIDITY}\n      actionType ={ActionType.REMOVE_LIQUIDITY}\n      gasFee = {API.GAS_FEE.REMOVE_LIQUIDITY}\n    />\n  );\n}\n\n\nexport default RemoveLiquidity\n","import SlidingMenu from \"components/SlidingMenu\";\nimport useEffectOnce from \"hooks/useEffectOnce\";\nimport useNavigateWithParams from \"hooks/useNavigateWithParams\";\nimport { useMemo } from \"react\";\nimport { Route, Routes, useParams } from \"react-router-dom\";\nimport { ROUTES } from \"router/routes\";\nimport { Tokens } from \"screens/components/Tokens\";\nimport { useApplicationActions } from \"store/application/hooks\";\nimport { OperationType } from \"store/application/reducer\";\nimport {useTokenOperationsStore } from \"store/token-operations/hooks\";\nimport { StyledTokenOperation } from \"styles/styles\";\nimport { getActionFromParams } from \"utils\";\nimport AddLiquidity from \"./AddLiquidity\";\nimport RemoveLiquidity from \"./RemoveLiquidity\";\n\n\nfunction ManageLiquidityScreen() {\n  const { selectedToken } = useTokenOperationsStore();\n  const navigate = useNavigateWithParams()\n  const params = useParams();\n  const action = getActionFromParams(params);\n  const {onOperationTypeChange} = useApplicationActions()\n\n\n  useEffectOnce(() => {\n    onOperationTypeChange(OperationType.MANAGE_LIQUIDITY)\n  })\n\n  const menuItems = useMemo(\n    () =>\n      selectedToken\n        ? [\n            {\n              text: \"Add liquidity\",\n              method: () =>\n                navigate(\n                  ROUTES.manageLiquidity.navigateToAddLiquidity.replace(\n                    \":id\",\n                    selectedToken?.tokenMinter\n                  )\n                ),\n            },\n            {\n              text: \"Remove liquidity\",\n              method: () =>\n                navigate(\n                  ROUTES.manageLiquidity.navigateToRemoveLiquidity.replace(\n                    \":id\",\n                    selectedToken?.tokenMinter\n                  )\n                ),\n            },\n          ]\n        : [],\n    [navigate, selectedToken]\n  );\n\n  const onTokenSelect = (tokenId: string) => {\n    navigate(\n      ROUTES.manageLiquidity.navigateToAddLiquidity.replace(\":id\", tokenId)\n    );\n  };\n\n  return (\n    <StyledTokenOperation>\n      {selectedToken && <SlidingMenu items={menuItems} action={action} />}\n\n      <Routes>\n        <Route\n          path={ROUTES.manageLiquidity.addLiquidity}\n          element={<AddLiquidity />}\n        />\n        <Route\n          path={ROUTES.manageLiquidity.removeLiquidity}\n          element={<RemoveLiquidity />}\n        />\n        <Route\n          path={ROUTES.manageLiquidity.tokens}\n          element={\n            <Tokens\n              onTokenSelect={onTokenSelect}\n              title=\"Select a token to manage liquidity\"\n            />\n          }\n        />\n      </Routes>\n    </StyledTokenOperation>\n  );\n}\n\nexport default ManageLiquidityScreen\n\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 13h-5v5c0 .55-.45 1-1 1s-1-.45-1-1v-5H6c-.55 0-1-.45-1-1s.45-1 1-1h5V6c0-.55.45-1 1-1s1 .45 1 1v5h5c.55 0 1 .45 1 1s-.45 1-1 1z\"\n}), 'AddRounded');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 13H6c-.55 0-1-.45-1-1s.45-1 1-1h12c.55 0 1 .45 1 1s-.45 1-1 1z\"\n}), 'RemoveRounded');\n\nexports.default = _default;"],"names":["useTokenOperationsStore","srcTokenAmount","destTokenAmount","selectedToken","getAmountOut","srcToken","destToken","srcAmount","destAmount","name","API","tokenMinter","data","console","log","tokenReserves","toString","tonReserves","res","useTokenFromParams","TokenOperations","icon","AddRounded","getAmountFunc","getBalances","Promise","all","ton","getTxRequest","submitButtonText","displayName","refreshAmountsOnActionChange","actionCategory","ActionCategory","actionType","ActionType","gasFee","RemoveRounded","navigate","useNavigateWithParams","params","useParams","action","getActionFromParams","onOperationTypeChange","useApplicationActions","useEffectOnce","OperationType","menuItems","useMemo","text","method","ROUTES","SlidingMenu","items","path","element","Tokens","onTokenSelect","tokenId","title","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}