{"version":3,"file":"static/js/262.0b7bbddc.chunk.js","mappings":"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","sources":["components/BigNumberDisplay.tsx","components/ContentLoader/index.tsx","components/FullPageLoader.tsx","components/SlidingMenu.tsx","components/TokenPreview.tsx","hooks/useNotification.tsx","hooks/useTokenFromParams.ts","hooks/useUsdValue.ts","screens/components/TokenOperations/styles.ts","components/NumberInput/index.tsx","tokens/index.ts","components/SwapCard/Balance.tsx","components/SwapCard/UsdAmount.tsx","components/SwapCard/index.tsx","screens/components/TokenOperations/DestToken.tsx","screens/components/TokenOperations/SrcToken.tsx","screens/components/TokenOperations/Icon.tsx","assets/images/shared/success.svg","screens/components/TokenOperations/SuccessModal.tsx","screens/components/TokenOperations/useTxSuccessMessage.ts","screens/components/TokenOperations/useValidation.ts","screens/components/TokenOperations/TxError.tsx","screens/components/TokenOperations/index.tsx","screens/components/TokenOperations/util.ts","screens/components/Tokens/styles.ts","screens/components/Tokens/ListToken.tsx","components/AddressText.tsx","screens/components/Tokens/CustomToken.tsx","screens/components/Tokens/index.tsx"],"sourcesContent":["import NumberFormat from \"react-number-format\";\n\ninterface Props {\n  value?: string | number;\n  decimalScale?:  number;\n  prefix?: string;\n}\nfunction BigNumberDisplay({ value, decimalScale = 4, prefix }: Props) {\n  \n  return value ? <NumberFormat \n  prefix = {prefix}\n  displayType=\"text\" value={value} thousandSeparator={true} decimalScale={decimalScale} /> : <>0</>\n}\n\nexport default BigNumberDisplay;\n","import Skeleton from \"@mui/material/Skeleton\";\n\ninterface Props {\n  height: number | string;\n  bgcolor?: string;\n  variant?: \"text\" | \"rectangular\" | \"circular\";\n  width?: string | number;\n  style?: any;\n  borderRadius?: number | string\n}\n\nfunction ContentLoader({\n  height,\n  bgcolor = \"rgba(255,255,255, 0.15)\",\n  variant,\n  width,\n  style = {},\n  borderRadius = 6\n}: Props) {\n  return (\n    <Skeleton\n      style={style}\n      height={height}\n      sx={{ bgcolor, borderRadius: borderRadius }}\n      variant={variant}\n      width={width}\n      \n    />\n  );\n}\n\nexport default ContentLoader;\n","import Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { styled, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { ReactNode } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport { Adapters } from \"services/wallets/types\";\nimport { useWalletStore } from \"store/wallet/hooks\";\n\ninterface Props {\n  open: boolean;\n  children?: ReactNode;\n}\n\nconst StyledContainer = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  gap: 10,\n});\n\nfunction FullPageLoader({ open, children }: Props) {\n  const { adapterId } = useWalletStore();\n  const showReminderInLoader = !isMobile && adapterId === Adapters.TON_HUB;\n\n  return (\n    <Backdrop\n      sx={{\n        color: \"#fff\",\n        zIndex: (theme) => theme.zIndex.drawer + 1,\n        backdropFilter: \"blur(5px) \",\n      }}\n      open={open}\n    >\n      <StyledContainer>\n        <CircularProgress color=\"inherit\" />\n        {children}\n        {showReminderInLoader && (\n          <Typography>\n            Please check tonhub wallet for pending notification\n          </Typography>\n        )}\n      </StyledContainer>\n    </Backdrop>\n  );\n}\n\nexport default FullPageLoader;\n","import { Typography } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useTokenOperationsStore } from \"store/token-operations/hooks\";\n\nconst StyledContainer = styled(Box)({\n  maxWidth: \"320px\",\n  display: \"flex\",\n  background: \"rgba(118, 118, 128, 0.12)\",\n  borderRadius: 8.91,\n  height: 32,\n  marginLeft:'auto',\n  marginRight:'auto',\n  overflow: \"auto\",\n  position: \"relative\",\n  padding: 2,\n  width: \"100%\",\n  marginTop: 10,\n  \"::-webkit-scrollbar\": {\n    height: 0,\n    display: \"none\",\n  },\n});\n\nconst StyledOption = styled(\"a\")({\n  height: \"100%\",\n  display: \"flex\",\n  alignItems: \"center\",\n  cursor: \"pointer\",\n  zIndex: 10,\n  justifyContent: \"center\",\n  p: {\n    fontSize: 13,\n    pointerEvents: \"none\",\n  },\n});\n\nconst StyledSelected = styled(Box)(\n  ({ allowTransition }: { allowTransition: boolean }) => ({\n    transition: allowTransition ? \"0.2s all\" : \"\",\n    position: \"absolute\",\n    border: \"0.5px solid rgba(0, 0, 0, 0.04)\",\n    boxShadow:\n      \" 0px 3px 8px rgba(0, 0, 0, 0.12), 0px 3px 1px rgba(0, 0, 0, 0.04)\",\n    borderRadius: 6.93,\n    height: \"calc(100% - 4px)\",\n    top: \"50%\",\n    transform: \"translate(0, -50%)\",\n    pointerEvents: \"none\",\n    background: \"white\",\n  })\n);\n\ninterface Item {\n  text: string;\n  method: () => void;\n}\n\ninterface Props {\n  items: Item[];\n  action: string;\n  symbol?: string;\n}\n\nfunction SlidingMenu({ items, action, symbol }: Props) {\n  const [left, setLeft] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [allowTransition, setAllowTransition] = useState(false);\n  const containerRef = useRef<any>();\n  const montedRef = useRef(true);\n  const {srcLoading, destLoading} = useTokenOperationsStore()\n\n\n  const onSelect = (index: number) => {\n    if (!montedRef.current) {\n      return;\n    }\n    const _width =\n      containerRef.current.getBoundingClientRect().width / items.length - 2;\n    const _left = _width * index + 2;\n    setLeft(_left);\n    setWidth(_width);\n  };\n\n  useEffect(() => {\n    return () => {\n      montedRef.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!allowTransition) {\n      setTimeout(() => {\n        setAllowTransition(true);\n      }, 500);\n    }\n  }, [left]);\n\n\n  const isLoading = srcLoading || destLoading\n\n  return (\n    <StyledContainer ref={containerRef} style={{pointerEvents: isLoading ? 'none' : 'all'}}>\n      <StyledSelected\n        allowTransition={allowTransition}\n        style={{ left: `${left}px`, width: `${width}px` }}\n      />\n      {items.map((item, index) => {\n        const selected = action === item.text.toLowerCase();\n\n        return (\n          <SlidingMenuItem\n            symbol={symbol}\n            onSelect={onSelect}\n            selected={selected}\n            key={item.text}\n            index={index}\n            item={item}\n            width={`calc(100% / ${items.length})`}\n          />\n        );\n      })}\n    </StyledContainer>\n  );\n}\n\ninterface SlidingMenuItemProps {\n  width: string;\n  item: Item;\n  onSelect: (index: number) => void;\n  selected: boolean;\n  index: number;\n  symbol?: string;\n}\n\nconst SlidingMenuItem = ({\n  width,\n  item,\n  onSelect,\n  selected,\n  index,\n  symbol,\n}: SlidingMenuItemProps) => {\n  useEffect(() => {\n    if (selected) {\n      onSelect(index);\n    }\n  }, [selected]);\n\n  const onClick = () => {\n    if (!selected) {\n      item.method();\n    }\n  };\n\n  return (\n    <StyledOption style={{ width }} onClick={onClick}>\n      <Typography style={{ fontWeight: 500 }}>\n        {item.text} {symbol}\n      </Typography>\n    </StyledOption>\n  );\n};\n\nexport default SlidingMenu;\n","import { Box, Typography } from \"@mui/material\";\nimport { styled } from \"@mui/styles\";\nimport DefaultTokenIcon from \"assets/images/shared/default-token-image.png\";\n\nconst StyledContainer = styled(Box)({\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    alignItems:'center',\n    \"& .token-name\": {\n      fontSize: 14,\n      fontWeight: 600,\n      marginLeft: 10,\n    },\n    \"& .token-image\": {\n      width: 20,\n      height: 20,\n      objectFit: \"contain\",\n    },\n});\n\ninterface Props {\n  image?: string;\n  name: string;\n}\n\nfunction TokenPreview({ image, name }: Props) {\n  return (\n    <StyledContainer className=\"token-preview\">\n      <img className=\"token-image\" src={image || DefaultTokenIcon} />\n      <Typography className=\"token-name\">{name.toUpperCase()}</Typography>\n    </StyledContainer>\n  );\n}\n\nexport default TokenPreview;\n","import { ReactNode, useCallback } from \"react\";\nimport { VariantType, useSnackbar, SnackbarOrigin } from \"notistack\";\nimport { IconButton, styled } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst StyledMessage = styled(Box)({\n  \"& &\": {\n    color: \"white\",\n  },\n  \"& a\": {\n    color: \"white\",\n  },\n});\n\ninterface Params {\n  message: ReactNode | string;\n  variant: VariantType;\n  onClose?: () => void;\n  autoHideDuration?: number;\n  anchorOrigin?: SnackbarOrigin;\n  className?: string;\n}\n\nfunction useNotification() {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const showNotification = useCallback(\n    ({ message, variant, onClose, autoHideDuration, anchorOrigin, className = '' }: Params) => {\n      const key = enqueueSnackbar(<StyledMessage>{message}</StyledMessage>, {\n        className,\n        anchorOrigin: anchorOrigin,\n        variant,\n        autoHideDuration: autoHideDuration || 5000,\n        onClose,\n        onClick: () => closeSnackbar(key),\n        action: () => (\n          <IconButton>\n            <CloseIcon style={{ width: 20, height: 20 }} />\n          </IconButton>\n        ),\n      });\n    },\n    [closeSnackbar, enqueueSnackbar]\n  );\n\n  return { showNotification };\n}\n\nexport default useNotification;\n","import { useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { ROUTES } from \"router/routes\";\nimport { useTokenOperationsActions } from \"store/token-operations/hooks\";\nimport { useTokensActions } from \"store/tokens/hooks\";\nimport useNavigateWithParams from \"./useNavigateWithParams\";\n\nfunction useTokenFromParams() {\n  const params = useParams();\n  const { id } = params;\n  const { getTokenById } = useTokensActions();\n  const { selectToken } = useTokenOperationsActions();\n  const navigate = useNavigateWithParams();\n\n  useEffect(() => {\n    if (id) {\n      const token = getTokenById(id);\n      if(!token){\n        navigate(ROUTES.swap.navigateToTokens)\n      }else{\n        selectToken(token);\n\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id, navigate]);\n}\n\nexport default useTokenFromParams;\n","import { useEffect, useRef, useState } from \"react\";\nimport { getUsdAmount } from \"screens/components/TokenOperations/util\";\n\nfunction useUsdValue(tokenId: string, value?: string, debounce?: number, disabled?: boolean) {\n  const [usd, setUsd] = useState(\"0\");\n  const [loading, setLoading] = useState(false);\n  const debounceMilliseconds = debounce && debounce > 0 ? debounce : 300;\n  const timeoutRef = useRef<any>();\n\n  useEffect(() => {\n    clearTimeout(timeoutRef.current);\n\n    if (!value || value === \"0\") {\n      setLoading(false);\n      setUsd(\"0\");\n      return;\n    }\n    setLoading(true);\n    timeoutRef.current = setTimeout(() => {\n      (async () => {\n        try {\n          const result = await getUsdAmount(tokenId, value, disabled);\n          setUsd(result);\n        } catch (error) {\n        } finally {\n          setLoading(false);\n        }\n      })();\n    }, debounceMilliseconds);\n  }, [tokenId, value, debounceMilliseconds]);\n\n  return { usd, loading };\n}\n\nexport default useUsdValue;\n","import { makeStyles } from \"@mui/styles\";\n\nimport { Theme } from \"@mui/material/styles\";\n\n\n\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  content: {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    width:'100%',\n   \n  },\n  cards: {\n   \n  },\n  button: {\n    marginTop: 'auto',\n    width:'100%',\n    marginBottom: 30,\n    [theme.breakpoints.down('sm')]: {\n    }\n  },\n\n}));\n\nexport { useStyles };\n","import { Box, TextField } from \"@mui/material\";\nimport NumberFormat from \"react-number-format\";\nimport ContentLoader from \"components/ContentLoader\";\nimport { styled } from \"@mui/system\";\nimport { DECIMALS_LIMIT } from \"consts\";\n\ninterface Props {\n  value?: string;\n  onChange: (val: string) => void;\n  isLoading?: boolean;\n  placeholder?: string;\n}\n\nconst StyledContainer = styled(Box)({\n  height: \"100%\",\n  width: \"100%\",\n  position: \"relative\",\n  display: \"flex\",\n  alignItems: \"center\",\n  \"& .MuiOutlinedInput-notchedOutline\": {\n    border: \"none\",\n  },\n});\n\nconst StyledLoader = styled(Box)({\n  position: \"absolute\",\n  left: 15,\n  top: \"50%\",\n  transform: \"translate(0, -50%)\",\n});\n\nexport function NumberInput({\n  value,\n  onChange,\n  isLoading,\n  placeholder,\n}: Props) {\n  return (\n    <StyledContainer className=\"input-container\">\n      {isLoading && (\n        <StyledLoader>\n          <ContentLoader width={140} height={30} borderRadius={3} />\n        </StyledLoader>\n      )}\n      <NumberFormat\n        inputProps={{\n          sx: {\n            padding: 0,\n            border: \"none\",\n            textIndent: \"16px\",\n            background: \"transparent\",\n          },\n          inputMode: \"decimal\",\n        }}\n        className=\"input\"\n        placeholder={isLoading ? \"\" : placeholder}\n        autoComplete=\"off\"\n        value={isLoading ? \"\" : value || \"\"}\n        customInput={TextField}\n        decimalScale={DECIMALS_LIMIT}\n        decimalSeparator=\".\"\n        thousandSeparator=\",\"\n        onValueChange={({ value }, event: any) => {\n          if (event.source !== \"prop\") {\n            console.log(value);\n            if (value === \".\") {\n              onChange(\"0.\") ;\n            }else{\n              onChange(value);\n            }\n            \n          }\n        }}\n      />\n    </StyledContainer>\n  );\n}\n","\nimport Ton from \"assets/images/tokens/ton.svg\";\n\n\n\nexport interface Token {\n  \n  image: string,\n  displayName: string,\n  color: string,\n  name: string,\n  isActive?:  boolean\n}\n\n\n\nconst ton: Token = {\n  image: Ton,\n  displayName: \"TON\",\n  name: \"ton\",\n  color: \"#1490CD\",\n  isActive: true,\n};\n\n\nexport { ton };\n","import { Typography } from \"@mui/material\";\nimport { styled, Box, borderRadius } from \"@mui/system\";\nimport BigNumberDisplay from \"components/BigNumberDisplay\";\nimport ContentLoader from \"components/ContentLoader\";\n\ninterface Props {\n  loading: boolean;\n  displayName: string;\n  availableAmount: string;\n  onMaxAmountClick?: () => void;\n  showMax?: boolean;\n}\n\nconst StyledContainer = styled(Box)({\n  height: \"100%\",\n  display:'flex',\n  alignItems:'center',\n  gap:5 ,\n  marginRight:12,\n});\n\nconst StyledMaxButton = styled('button')({\n    background: \"rgba(255,255,255, 0.1)\",\n    padding:'0px 10px',\n    borderRadius: 10,\n    height: '100%',\n   \n    cursor:'pointer',\n    \"p\": {\n        color:'white',\n        fontSize: 12,\n        fontWeight: 500\n    }\n})\n\nfunction Balance({ loading, availableAmount, onMaxAmountClick, showMax }: Props) {\n  return (\n    <StyledContainer>\n      {loading ? (\n        <ContentLoader width={40} height={15} borderRadius=\"4px\" />\n      ) : (\n        <>\n          <Typography component=\"p\" textAlign=\"right\">\n            <strong>Balance: </strong>\n            {/* {availableAmount} */}\n            {console.log(availableAmount)}\n            <BigNumberDisplay value={availableAmount} />\n            {/* {` ${displayName}`} */}\n          </Typography>\n          {showMax && onMaxAmountClick && <StyledMaxButton\n            onClick={onMaxAmountClick}\n          >\n           <Typography> MAX</Typography>\n          </StyledMaxButton>}\n        </>\n      )}\n    </StyledContainer>\n  );\n}\n\nexport default Balance;\n","import { Typography } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport BigNumberDisplay from \"components/BigNumberDisplay\";\nimport ContentLoader from \"components/ContentLoader\";\nimport useUsdValue from \"hooks/useUsdValue\";\n\ninterface Props {\n  tokenId: string;\n  value?: string;\n  isLoading?: boolean;\n}\n\nconst StyledContainer = styled(Box)({\n    height: '100%'\n})\n\n\nfunction UsdAmount({ tokenId, value, isLoading }: Props) {\n  \n  const { loading: usdLoading, usd } = useUsdValue(tokenId, value);\n\n  return (\n    <StyledContainer>\n      {isLoading || usdLoading ? (\n        <ContentLoader width={40} height=\"15px\" borderRadius=\"4px\" />\n      ) : (\n        <Typography component=\"p\">\n          ~$\n          <BigNumberDisplay value={usd} decimalScale={5} />\n          {/* {toFixed(usd.toLocaleString())} */}\n        </Typography>\n      )}\n    </StyledContainer>\n  );\n}\n\nexport default UsdAmount;\n","import { NumberInput } from \"components/NumberInput\";\nimport { PoolInfo } from \"services/api/addresses\";\nimport { ROUTES } from \"router/routes\";\nimport { ton } from \"tokens\";\nimport { styled, Box } from \"@mui/system\";\nimport { Avatar, Typography } from \"@mui/material\";\nimport Balance from \"./Balance\";\nimport UsdAmount from \"./UsdAmount\";\nimport useNavigateWithParams from \"hooks/useNavigateWithParams\";\nimport { useApplicationStore, useIsExpandedView } from \"store/application/hooks\";\nimport { OperationType } from \"store/application/reducer\";\nimport { useWalletStore } from \"store/wallet/hooks\";\ninterface Props {\n  inputAmount?: string;\n  balance: string;\n  onChange: (val: string) => void;\n  token: PoolInfo;\n  isLoading?: boolean;\n  balanceLoading: boolean;\n  onMaxAmount?: () => void;\n  showMax?: boolean;\n}\n\nfunction SwapCard({\n  inputAmount,\n  onChange,\n  token,\n  isLoading,\n  balanceLoading,\n  balance,\n  onMaxAmount,\n  showMax,\n}: Props) {\n  const expanded = useIsExpandedView();\n  const navigate = useNavigateWithParams();\n  const { operationType } = useApplicationStore();\n  const {address} = useWalletStore()\n\n  const isTon = token.name === ton.name;\n\n  const onTokenSelect = () => {\n    if (isTon) {\n      return;\n    }    \n    if (operationType === OperationType.SWAP) {\n      navigate(ROUTES.swap.navigateToTokens);\n    } else {\n      navigate(ROUTES.manageLiquidity.navigateToTokens);\n    }\n  };\n\n  return (\n    <StyledContainer className=\"swap-card\">\n      <StyledBg color={token.color} />\n      <div style={{ position: \"relative\" }}>\n        <StyledInput expanded={expanded}>\n          <NumberInput\n            placeholder=\"0\"\n            isLoading={isLoading}\n            value={inputAmount}\n            onChange={(val) => onChange(val)}\n          />\n          <StyledTokenDisplay\n            style={{\n              cursor: isTon ? \"\" : \"pointer\",\n              userSelect: isTon ? \"none\" : \"all\",\n            }}\n            onClick={onTokenSelect}\n          >\n            {token.image && <StyledAvatar src={token.image} alt=\"token\" />}\n            <Typography className=\"name\">{token.displayName}</Typography>\n            {!isTon && <div className=\"arrow\"></div>}\n          </StyledTokenDisplay>\n        </StyledInput>\n\n        <StyledBottom>\n         {address && <>\n         <UsdAmount\n            isLoading={isLoading}\n            value={inputAmount}\n            tokenId={token.tokenMinter}\n          />\n          <Balance\n            availableAmount={balance}\n            displayName={token.displayName}\n            loading={balanceLoading}\n            onMaxAmountClick={onMaxAmount}\n            showMax={showMax}\n          />\n         </>}\n        </StyledBottom>\n      </div>\n    </StyledContainer>\n  );\n}\n\nexport default SwapCard;\n\nconst StyledContainer = styled(Box)({\n  borderRadius: 12,\n  padding: \"18px\",\n  display: \"flex\",\n  position: \"relative\",\n  overflow: \"hidden\",\n  flexDirection: \"column\",\n});\n\nconst StyledTokenDisplay = styled(Box)({\n  padding: \"0px 8px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  gap: 10,\n  position: \"relative\",\n  background: \"rgba(255,255,255, 0.1)\",\n  borderRadius: 12,\n  height: \"100%\",\n  boxShadow: \"rgb(0 0 0 / 8%) 0px 6px 10px\",\n  \".name\": {\n    maxWidth: 70,\n    whiteSpace:'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis'\n  },\n  \".arrow\": {\n    width: 7,\n    height: 7,\n    borderLeft: \"2px solid white\",\n    borderBottom: \"2px solid white\",\n    transform: \"rotate(-45deg)\",\n    position: \"relative\",\n    top: \"-2px\",\n  },\n  p: {\n    color: \"white\",\n    fontSize: 12,\n    fontWeight: 600,\n  },\n});\n\nconst StyledAvatar = styled(Avatar)({\n  width: 24,\n  height: 24,\n});\n\nconst StyledBottom = styled(Box)({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  height: 25,\n  marginTop: 10,\n  p: {\n    color: \"white\",\n    fontSize: 12,\n    fontWeight: 400,\n  },\n});\n\nconst StyledInput = styled(Box)(({ expanded }: { expanded: boolean }) => ({\n  paddingRight: 10,\n  position: \"relative\",\n  background: \"rgba(255,255,255, 0.1)\",\n  width: \"100%\",\n  borderRadius: \"12px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  height: expanded ? 54 : 42,\n  padding: expanded ? 10 : 5,\n  \".input-container\": {\n    width: \"100%\",\n    height: \"100%\",\n    input: {\n      color: \"white\",\n      fontSize: 29,\n      fontWeight: 600,\n      height: \"100%\",\n      paddingRight: 10,\n      textIndent: 5,\n    },\n  },\n}));\n\nconst StyledBg = styled(Box)(({ color }: { color: string }) => ({\n  background: color,\n  width: \"100%\",\n  position: \"absolute\",\n  height: \"100%\",\n  left: 0,\n  top: 0,\n  pointerEvents: \"none\",\n  opacity: 0.93,\n}));\n","import { Box } from \"@mui/system\";\nimport SwapCard from \"components/SwapCard\";\nimport { useEffect, useRef } from \"react\";\nimport { PoolInfo } from \"services/api/addresses\";\nimport {\n  useTokenOperationsActions,\n  useTokenOperationsStore,\n} from \"store/token-operations/hooks\";\nimport { InInput } from \"store/token-operations/reducer\";\nimport { fromNano, toNano } from \"ton\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { calculateTokens } from \"./util\";\n\ninterface Props {\n  token: PoolInfo;\n  srcTokenName: string;\n  getAmountFunc: any;\n}\n\nfunction DestToken({ token, srcTokenName, getAmountFunc }: Props) {\n  const {\n    destTokenAmount,\n    totalBalances,\n    destLoading,\n    destAvailableAmountLoading,\n    inInput\n  } = useTokenOperationsStore();\n\n  const {\n    updateDestTokenAmount,\n    updateSrcTokenAmount,\n    updateSrcTokenLoading,\n    onInputChange,\n  } = useTokenOperationsActions();\n\n  const balanceRef = useRef(\"\");\n  const debounce = useDebouncedCallback(async () => {\n    if (!balanceRef.current) {\n      return;\n    }\n    let result = 0;\n    const jetton = srcTokenName === \"ton\" ? token.tokenMinter : srcTokenName;\n    try {\n      result = await calculateTokens(\n        jetton,\n        srcTokenName !== \"ton\",\n        null,\n        toNano(balanceRef.current || \"0\"),\n        getAmountFunc\n      );\n\n      if (!balanceRef.current) {\n        return;\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      if (!balanceRef.current) {\n        return;\n      }\n      updateSrcTokenLoading(false);\n      if (result === 0) {\n        return;\n      } else {\n        updateSrcTokenAmount(fromNano(result));\n      }\n    }\n  }, 600);\n\n  const onChange = (value: string) => {\n    updateDestTokenAmount(value);\n    onInputChange(InInput.DEST);\n    balanceRef.current = value;\n    if (!value) {\n      updateSrcTokenLoading(false);\n      updateSrcTokenAmount(\"\");\n    } else {\n      updateSrcTokenLoading(true);\n      debounce();\n    }\n  };\n\n  useEffect(() => {\n    if (destTokenAmount && inInput === InInput.DEST) {\n       onChange(destTokenAmount);\n    }\n  }, []);\n\n\n  return (\n    <div style={{ marginBottom: 35 }}>\n      <SwapCard\n        isLoading={destLoading}\n        onChange={onChange}\n        inputAmount={destTokenAmount}\n        token={token}\n        balance={totalBalances.destBalance}\n        balanceLoading={destAvailableAmountLoading}\n      />\n    </div>\n  );\n}\n\nexport default DestToken;\n","import { Box } from \"@mui/system\";\nimport SwapCard from \"components/SwapCard/index\";\nimport { useEffect, useRef } from \"react\";\nimport { PoolInfo } from \"services/api/addresses\";\nimport {\n  useTokenOperationsActions,\n  useTokenOperationsStore,\n} from \"store/token-operations/hooks\";\nimport { InInput } from \"store/token-operations/reducer\";\nimport { useWalletStore } from \"store/wallet/hooks\";\nimport { fromNano, toNano } from \"ton\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { calculateTokens } from \"./util\";\ninterface Props {\n  token: PoolInfo;\n  destTokenName: string;\n  getAmountFunc: any;\n  maxAmount: string;\n}\n\nconst SrcToken = ({\n  token,\n  getAmountFunc,\n  destTokenName,\n  maxAmount,\n}: Props) => {\n  const {\n    srcTokenAmount,\n    totalBalances,\n    srcLoading,\n    srcAvailableAmountLoading,\n    inInput\n  } = useTokenOperationsStore();\n\n  const { address } = useWalletStore();\n  const {\n    updateDestTokenAmount,\n    updateSrcTokenAmount,\n    updateDestTokenLoading,\n    onInputChange\n  } = useTokenOperationsActions();\n\n  const balanceRef = useRef(\"\");\n  const debounce = useDebouncedCallback(async () => {\n    if (!balanceRef.current) {\n      return;\n    }\n    let result = 0;\n    const jetton = token.name === \"ton\" ? destTokenName : token.tokenMinter;\n    try {\n      result = await calculateTokens(\n        jetton,\n        token.name !== \"ton\",\n        toNano(balanceRef.current || \"0\"),\n        null,\n        getAmountFunc\n      );\n\n      if (!balanceRef.current) {\n        return;\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      if (!balanceRef.current) {\n        return;\n      }\n      updateDestTokenLoading(false);\n      // TODO ...\n\n      if (result === 0) {\n        return;\n      } else {\n        updateDestTokenAmount(fromNano(result));\n      }\n    }\n  }, 600);\n\n  const onChange = (value: string) => {\n    updateSrcTokenAmount(value);\n    onInputChange(InInput.SOURCE)\n    balanceRef.current = value;\n\n    if (!value || Number(value) === 0) {\n      updateDestTokenAmount(\"\");\n      updateDestTokenLoading(false);\n    } else {\n      updateDestTokenLoading(true);\n      debounce();\n    }\n  };\n\n  useEffect(() => {\n    if (srcTokenAmount && inInput === InInput.SOURCE) {\n       onChange(srcTokenAmount);\n    }\n  }, []);\n\n\n  \n\n  return (\n    <SwapCard\n        onMaxAmount={() => onChange(maxAmount)}\n        isLoading={srcLoading}\n        onChange={onChange}\n        inputAmount={srcTokenAmount}\n        balance={totalBalances.srcBalance}\n        token={token}\n        balanceLoading={srcAvailableAmountLoading}\n        showMax={srcTokenAmount !== maxAmount && !!address}\n      />\n  );\n};\n\nexport default SrcToken;\n","import { Box, styled } from \"@mui/system\";\nimport { useIsExpandedView } from \"store/application/hooks\";\n\ninterface Props {\n  icon: any;\n  color: string;\n}\n\nconst StylesIcon = styled(Box)(\n  ({ color, expanded }: { color: string; expanded: boolean }) => ({\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: expanded ? 33 : 28,\n    height: expanded ? 33 : 28,\n    marginTop: 8,\n    borderRadius: \"50%\",\n    marginBottom: 8,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // border: `1px solid ${color}`,\n    \"& svg\": {\n      width: \"70%\",\n      \"& path\": {\n        fill: color,\n      },\n    },\n  })\n);\n\nfunction Icon({ icon, color }: Props) {\n  const expanded = useIsExpandedView();\n  return (\n    <StylesIcon color={color} expanded={expanded}>\n      {icon}\n    </StylesIcon>\n  );\n}\n\nexport default Icon;\n","var _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSuccess(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 45,\n    height: 45,\n    viewBox: \"0 0 45 45\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_1775_20148)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.5 0C18.0499 0 13.6998 1.3196 9.99968 3.79193C6.29957 6.26427 3.41569 9.77829 1.71272 13.8896C0.00974894 18.001 -0.435826 22.525 0.432341 26.8895C1.30051 31.2541 3.44343 35.2632 6.59011 38.4099C9.73679 41.5566 13.7459 43.6995 18.1105 44.5677C22.4751 45.4358 26.9991 44.9903 31.1104 43.2873C35.2217 41.5843 38.7357 38.7004 41.2081 35.0003C43.6804 31.3002 45 26.9501 45 22.5C44.9933 16.5347 42.6206 10.8157 38.4025 6.59755C34.1844 2.37945 28.4653 0.00674921 22.5 0V0ZM30.857 19.1382L21.482 28.5132C21.3079 28.6874 21.1012 28.8255 20.8738 28.9197C20.6463 29.014 20.4025 29.0625 20.1563 29.0625C19.91 29.0625 19.6662 29.014 19.4388 28.9197C19.2113 28.8255 19.0046 28.6874 18.8305 28.5132L14.143 23.8257C13.9653 23.6524 13.8238 23.4456 13.7266 23.2172C13.6294 22.9887 13.5786 22.7433 13.577 22.4951C13.5754 22.2469 13.6232 22.0008 13.7174 21.7712C13.8117 21.5415 13.9506 21.3329 14.1261 21.1574C14.3017 20.9819 14.5103 20.8429 14.7399 20.7487C14.9696 20.6544 15.2156 20.6067 15.4638 20.6082C15.7121 20.6098 15.9575 20.6607 16.1859 20.7578C16.4143 20.855 16.6212 20.9965 16.7945 21.1743L20.1563 24.5357L28.2055 16.4868C28.3788 16.309 28.5857 16.1675 28.8141 16.0703C29.0425 15.9732 29.288 15.9223 29.5362 15.9207C29.7844 15.9192 30.0305 15.9669 30.2601 16.0612C30.4897 16.1554 30.6984 16.2944 30.8739 16.4699C31.0494 16.6454 31.1883 16.854 31.2826 17.0837C31.3769 17.3133 31.4246 17.5594 31.423 17.8076C31.4215 18.0558 31.3706 18.3012 31.2734 18.5297C31.1763 18.7581 31.0347 18.9649 30.857 19.1382Z\",\n    fill: \"#24CF5B\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_1775_20148\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 45,\n    height: 45,\n    fill: \"white\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSuccess);\nexport default __webpack_public_path__ + \"static/media/success.79a5c2f6fcc496326c3a8261c4463432.svg\";\nexport { ForwardRef as ReactComponent };","import { Typography } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { Popup } from \"components\";\nimport { ReactNode, useCallback } from \"react\";\nimport { ActionType } from \"services/wallets/types\";\nimport {\n  useTokenOperationsActions,\n  useTokenOperationsStore,\n} from \"store/token-operations/hooks\";\nimport SuccessIcon from \"assets/images/shared/success.svg\";\nimport BigNumberDisplay from \"components/BigNumberDisplay\";\ninterface Props {\n  actionType: ActionType;\n}\n\nfunction SuccessModal({ actionType }: Props) {\n  const { txConfirmation, txSuccess } = useTokenOperationsStore();\n  const { closeSuccessModal } = useTokenOperationsActions();\n\n  const createComponent = useCallback(() => {\n    switch (actionType) {\n      case ActionType.BUY:\n        return (\n          <Container title=\"Purchase Confirmation\">\n            <Box className=\"row\">\n              <Typography>{txConfirmation.tokenName} Purchased</Typography>\n              <Typography>\n                <BigNumberDisplay value={txConfirmation.destTokenAmount} />\n              </Typography>\n            </Box>\n            <Box className=\"row\">\n              <Typography>TON Paid </Typography>\n              <Typography>\n                <BigNumberDisplay value={txConfirmation.srcTokenAmount} />\n              </Typography>\n            </Box>\n          </Container>\n        );\n      case ActionType.SELL:\n        return (\n          <Container title=\"Purchase Confirmation\">\n            <Box className=\"row\">\n              <Typography>{txConfirmation.tokenName} Sold</Typography>\n              <Typography>\n                <BigNumberDisplay value={txConfirmation.srcTokenAmount} />{\" \"}\n              </Typography>\n            </Box>\n            <Box className=\"row\">\n              <Typography>TON Received </Typography>\n              <Typography>\n                <BigNumberDisplay value={txConfirmation.destTokenAmount} />\n              </Typography>\n            </Box>\n          </Container>\n        );\n      case ActionType.REMOVE_LIQUIDITY:\n        return (\n          <Container title=\"Liquidity Removed\">\n            <Box className=\"row\">\n              <Typography>\n                Ton removed from pool\n              </Typography>\n              <Typography>\n                <BigNumberDisplay value={txConfirmation.srcTokenAmount} />\n              </Typography>\n            </Box>\n            <Box className=\"row\">\n              <Typography>{txConfirmation.tokenName} removed from pool</Typography>\n              <Typography>\n                <BigNumberDisplay value={txConfirmation.destTokenAmount} />\n              </Typography>\n            </Box>\n          </Container>\n        );\n      case ActionType.ADD_LIQUIDITY:\n        return (\n          <Container title=\"Liquidity Added\">\n            <Box className=\"row\">\n              <Typography>Ton added to pool </Typography>\n              <Typography>\n                <BigNumberDisplay value={txConfirmation.srcTokenAmount} />\n              </Typography>\n            </Box>\n            <Box className=\"row\">\n              <Typography>{txConfirmation.tokenName} added to pool</Typography>\n              <Typography>\n                <BigNumberDisplay value={txConfirmation.destTokenAmount} />\n              </Typography>\n            </Box>\n          </Container>\n        );\n\n      default:\n        return <></>;\n    }\n  }, [actionType, txConfirmation]);\n\n  return (\n    <Popup open={txSuccess} onClose={closeSuccessModal} maxWidth={400}>\n      {createComponent()}\n    </Popup>\n  );\n}\n\nexport default SuccessModal;\n\ninterface ContainerProps {\n  children: ReactNode;\n  title: string;\n}\n\nfunction Container({ children, title }: ContainerProps) {\n  return (\n    <StyledContainer>\n      <StyledHeader>\n        <img src={SuccessIcon} className=\"icon\" />\n        <Typography>{title}</Typography>\n      </StyledHeader>\n      <StyledChildren>{children}</StyledChildren>\n    </StyledContainer>\n  );\n}\n\nconst StyledHeader = styled(Box)({\n  display: \"flex\",\n  alignItems: \"center\",\n  gap: 22,\n  flexDirection: \"column\",\n  \"& p\": {\n    fontSize: 19,\n    fontWeight: 500,\n  },\n  \"& .icon\": {\n    width: 45,\n    height: 45,\n    objectFit: \"contain\",\n  },\n});\n\nconst StyledChildren = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: 13,\n  width: \"100%\",\n});\n\nconst StyledContainer = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: 19,\n  alignItems: \"center\",\n  width: \"100%\",\n\n  \"& *\": {\n    color: \"black\",\n  },\n\n\n  \"& .row\": {\n    display: \"flex\",\n    gap: 40,\n    background: \"#EEEEEE\",\n    borderRadius: 12,\n    height: 49,\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: \"0px 20px\",\n    \"& p\": {\n      fontSize: 14,\n    },\n  },\n});\n","import React, { useMemo } from \"react\";\nimport { ActionType } from \"services/wallets/types\";\nimport { useTokenOperationsStore } from \"store/token-operations/hooks\";\n\nfunction useTxSuccessMessage(actionType: ActionType) {\n  const { txConfirmation } = useTokenOperationsStore();\n\n  const { srcTokenAmount, destTokenAmount, tokenName } = txConfirmation;\n\n  return useMemo(() => {\n    if (actionType === ActionType.BUY) {\n      return `Successfully swapped ${srcTokenAmount} TON for ${destTokenAmount} ${tokenName}`;\n    }\n\n    if (actionType === ActionType.SELL) {\n      return `Successfully swapped ${srcTokenAmount} ${tokenName} for ${destTokenAmount} TON`;\n    }\n    if (actionType === ActionType.ADD_LIQUIDITY) {\n      return `Successfully added ${srcTokenAmount} TON and ${destTokenAmount} ${tokenName} liquidity`;\n    }\n    if (actionType === ActionType.REMOVE_LIQUIDITY) {\n      return `Successfully removed ${srcTokenAmount} TON and ${destTokenAmount} ${tokenName} liquidity`;\n    }\n    return \"\";\n  }, [actionType, txConfirmation]);\n}\n\nexport default useTxSuccessMessage;\n","import React, { useMemo } from \"react\";\nimport { GAS_FEE } from \"services/api\";\nimport { PoolInfo } from \"services/api/addresses\";\nimport { ActionType } from \"services/wallets/types\";\nimport { useTokenOperationsStore } from \"store/token-operations/hooks\";\nimport { fromNano } from \"ton\";\nimport { toNanoSafe } from \"utils\";\n\nfunction useValidation(\n  actionType: ActionType,\n  gasFee: GAS_FEE,\n  srcToken: PoolInfo\n) {\n  const { totalBalances, srcTokenAmount, destTokenAmount, txPending } =\n    useTokenOperationsStore();\n\n\n  return useMemo(() => {\n    let maxAmount = totalBalances.srcBalance;\n\n    const disabled =\n      !srcTokenAmount ||\n      srcTokenAmount === \"0\" ||\n      !destTokenAmount ||\n      destTokenAmount === \"0\" ||\n      txPending;\n\n    const fee = Number(gasFee + 0.01).toFixed(2);\n\n    let insufficientFunds = false;\n\n    if (actionType === ActionType.BUY) {\n      const maxAmountTemp = toNanoSafe(totalBalances.srcBalance).sub(\n        toNanoSafe(fee)\n      );\n      maxAmount = fromNano(maxAmountTemp);\n      insufficientFunds = toNanoSafe(srcTokenAmount).gt(maxAmountTemp);\n    }\n    if (actionType === ActionType.SELL) {\n      insufficientFunds = toNanoSafe(srcTokenAmount).gt(\n        toNanoSafe(totalBalances.srcBalance)\n      );\n    }\n    if (actionType === ActionType.ADD_LIQUIDITY) {\n      const maxAmountTemp = toNanoSafe(totalBalances.srcBalance).sub(\n        toNanoSafe(fee)\n      );\n      maxAmount = fromNano(maxAmountTemp);\n      const srcError = toNanoSafe(srcTokenAmount).gt(maxAmountTemp);\n\n      const destError = toNanoSafe(destTokenAmount).gt(\n        toNanoSafe(totalBalances.destBalance)\n      );\n      insufficientFunds = srcError || destError;\n    }\n\n    if (actionType === ActionType.REMOVE_LIQUIDITY) {\n    }    \n\n    return {\n      insufficientFunds: disabled ? false : insufficientFunds,\n      disabled,\n      maxAmount,\n    };\n  }, [\n    srcToken,\n    srcTokenAmount,\n    gasFee,\n    totalBalances,\n    destTokenAmount,\n    actionType,\n  ]);\n}\n\nexport default useValidation;\n","import { Typography } from \"@mui/material\";\nimport { styled, Box } from \"@mui/system\";\nimport { Popup } from \"components\";\nimport {\n  useTokenOperationsActions,\n  useTokenOperationsStore,\n} from \"store/token-operations/hooks\";\nimport ErrorIcon from \"assets/images/shared/error.png\";\nimport { useEffect, useState } from \"react\";\nimport { delay } from \"utils\";\n\nfunction TxError() {\n  const { txError } = useTokenOperationsStore();\n  const { hideTxError } = useTokenOperationsActions();\n  const [open, setOpen] = useState(false)\n\n  useEffect(() => {\n      if(txError){\n        setOpen(true)\n      }\n  }, [txError])\n\n\n  const onClose = async () => {\n    setOpen(false)\n    await delay(500)\n    hideTxError()\n  }\n  \n\n  return (\n    <Popup open={open} onClose={onClose} maxWidth={400}>\n      <StyledContent>\n      <img src={ErrorIcon} className=\"icon\" />\n        <Typography>{txError}</Typography>\n      </StyledContent>\n    </Popup>\n  );\n}\n\nexport default TxError;\n\nconst StyledContent = styled(Box)({\n  \"p\": {\n    fontSize: 19,\n    fontWeight: 500,\n  },\n  display:'flex',\n  flexDirection:'column',\n  alignItems:'center',\n  gap: 22,\n  \"img\":{\n    width: 45,\n    height: 45,\n    objectFit: \"contain\",\n  }\n});\n","import { Box } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { ActionButton, Popup } from \"components\";\nimport { PoolInfo } from \"services/api/addresses\";\nimport WarningAmberRoundedIcon from \"@mui/icons-material/WarningAmberRounded\";\nimport { useStyles } from \"./styles\";\nimport DestToken from \"./DestToken\";\nimport SrcToken from \"./SrcToken\";\nimport { walletService } from \"services/wallets/WalletService\";\nimport {\n  useTokenOperationsActions,\n  useTokenOperationsStore,\n} from \"store/token-operations/hooks\";\nimport { useWalletStore } from \"store/wallet/hooks\";\nimport {\n  useIsExpandedView,\n  useWalletModalToggle,\n} from \"store/application/hooks\";\nimport { StyledTokenOperationActions } from \"styles/styles\";\nimport Icon from \"./Icon\";\nimport gaAnalytics from \"services/analytics/ga\";\nimport { ActionCategory, ActionType } from \"services/wallets/types\";\nimport { client, GAS_FEE, waitForSeqno } from \"services/api\";\nimport { Address } from \"ton\";\nimport SuccessModal from \"./SuccessModal\";\nimport useTxSuccessMessage from \"./useTxSuccessMessage\";\nimport useValidation from \"./useValidation\";\nimport TxError from \"./TxError\";\n\ninterface Props {\n  srcToken: PoolInfo;\n  destToken: PoolInfo;\n  submitButtonText: string;\n  icon: any;\n  getBalances: () => Promise<any>;\n  getAmountFunc: any;\n  getTxRequest: () => any;\n  refreshAmountsOnActionChange: boolean;\n  actionCategory: ActionCategory;\n  actionType: ActionType;\n  gasFee: GAS_FEE;\n}\n\nconst TokenOperations = ({\n  srcToken,\n  destToken,\n  submitButtonText,\n  icon,\n  getBalances,\n  getAmountFunc,\n  getTxRequest,\n  refreshAmountsOnActionChange,\n  actionCategory,\n  actionType,\n  gasFee,\n}: Props) => {\n  const expanded = useIsExpandedView();\n  const classes = useStyles({ color: srcToken?.color || \"\", expanded });\n\n  const { txPending } = useTokenOperationsStore();\n  const toggleModal = useWalletModalToggle();\n  const { address, adapterId, session } = useWalletStore();\n  \n\n  const successMessage = useTxSuccessMessage(actionType);\n  const { insufficientFunds, disabled, maxAmount } = useValidation(\n    actionType,\n    gasFee,\n    srcToken\n  );\n  const {\n    onResetAmounts,\n    getTokensBalance,\n    resetTokensBalance,\n    sendTransaction,\n    \n  } = useTokenOperationsActions();\n\n  const onSubmit = async () => {\n    const tx = async () => {\n      const txRequest = await getTxRequest();\n      const waiter = await waitForSeqno(\n        client.openWalletFromAddress({\n          source: Address.parse(address!!),\n        })\n      );\n      await walletService.requestTransaction(adapterId!!, session, txRequest);\n      await waiter();\n      gaAnalytics.sendEvent(actionCategory, actionType, successMessage);\n      onResetAmounts();\n      getTokensBalance(getBalances);\n    };\n\n    sendTransaction(tx);\n  };\n\n  useEffect(() => {\n    if (address && refreshAmountsOnActionChange) {\n      getTokensBalance(getBalances);\n    } else if (!address) {\n      resetTokensBalance();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [address]);\n\n  return (\n    <StyledTokenOperationActions>\n      <TxError />\n      <SuccessModal actionType={actionType} />\n      <Box className={classes.content}>\n        <Box\n          className={classes.cards}\n          style={{ pointerEvents: txPending ? \"none\" : \"all\" }}\n        >\n          <SrcToken\n            token={srcToken}\n            getAmountFunc={getAmountFunc}\n            destTokenName={destToken.tokenMinter}\n            maxAmount={maxAmount}\n          />\n\n          <Icon icon={icon} color={destToken.color} />\n          <DestToken\n            getAmountFunc={getAmountFunc}\n            token={destToken}\n            srcTokenName={srcToken.tokenMinter}\n          />\n        </Box>\n\n        <Box className={classes.button}>\n          {!address ? (\n            <ActionButton onClick={toggleModal}>Connect wallet</ActionButton>\n          ) : insufficientFunds ? (\n            <ActionButton\n              isDisabled={disabled || insufficientFunds}\n              onClick={() => {}}\n            >\n              <WarningAmberRoundedIcon\n                style={{\n                  color: \"#7D7D7D\",\n                  top: \"-2px\",\n                  position: \"relative\",\n                }}\n              />\n              Insufficient funds\n            </ActionButton>\n          ) : (\n            <ActionButton\n              isLoading={txPending}\n              isDisabled={disabled || insufficientFunds}\n              onClick={onSubmit}\n            >\n              {submitButtonText}\n            </ActionButton>\n          )}\n        </Box>\n      </Box>\n    </StyledTokenOperationActions>\n  );\n};\n\nexport default TokenOperations;\n","import BN from \"bn.js\";\nimport * as API from \"services/api\";\n\n\nconst getUsdAmount = async (\n  tokenId: string,\n  amount: string,\n  disabled?: boolean\n) => {\n  let result;\n  try {\n    if (disabled) {\n      result = await API.fetchDisabledTokensPrice(tokenId);\n    } else {\n      result = await API.getTokenDollarValue(tokenId, amount);\n    }\n    \n    console.log(result);\n    \n\n    return result;\n  } catch (error) {\n    console.log(error);\n\n    return \"0\";\n  }\n};\n\nconst calculateTokens = async (\n  tokenName: string,\n  isTonToToken: boolean,\n  srcAmount: null | BN,\n  destAmount: null | BN,\n  getAmountsFunc: any\n) => {\n  console.log(tokenName);\n\n  if (srcAmount != null) {\n    const amount = await getAmountsFunc(\n      tokenName,\n      isTonToToken,\n      srcAmount,\n      destAmount != null ? destAmount : null\n    );\n\n    return amount;\n  } else if (destAmount != null) {\n    const amount = await getAmountsFunc(\n      tokenName,\n      isTonToToken,\n      srcAmount,\n      destAmount.toString()\n    );\n    return amount;\n  }\n};\n\nexport { getUsdAmount, calculateTokens };\n","import { Avatar, Typography } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { makeStyles } from \"@mui/styles\";\nimport { styled, Box } from \"@mui/system\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    textAlign: \"center\",\n    width: \"100%\",\n    paddingBottom: 50,\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingBottom: 30,\n    },\n  },\n  lists: {\n   \n  },\n  list: {},\n  token: {},\n  menu: {\n    borderRadius: \"10px\",\n    padding: 15,\n    transition: \"0.1s all\",\n  },\n}));\n\nexport const StyledImage = styled(Avatar)({\n  width: 43,\n  height: 43,\n})\n\n\nexport const StyledUsdValue = styled(Box)({\n  marginLeft:'auto',\n  opacity: 0.6,\n})\n\nexport const StyledToken = styled(Box)(({color}:{color: string}) => ({\n  overflow: \"hidden\",\n  position: \"relative\",\n  transition: \"0.2s all\",\n  background: color,\n  borderRadius: 12,\n  display: \"flex\",\n  gap:14,\n  alignItems: \"center\",\n  justifyContent: \"flex-start\",\n  padding: '8px 20px 8px 14px',\n  \"& p\": {\n    fontSize: 14,\n    fontWeight: 500,\n    color:'white'\n  }\n}));\n\nexport const StyledAddTokenButton = styled(Box)({\n  width: \"100%\",\n  height: \"100%\",\n  borderRadius: 12,\n  borderSpacing: \"20px\",\n  borderStyle: \"dashed\",\n  borderWidth: \"1px\",\n  borderColor: \"rgba(0,0,0, 0.2)\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  cursor: \"pointer\",\n});\n\nexport const StyledAddTokenButtonText = styled(Typography)({\n  marginTop: 20,\n  fontWeight: 500,\n  fontSize: 14,\n});\n\n\n\nexport const StyledTokenTexts = styled(Box)({\n display:'flex',\n flexDirection:'column',\n alignItems:'flex-start',\n \"& .symbol\": {\n    fontWeight: 500,\n    fontSize: 17\n },\n \"& .name\": {\n  fontSize: 12,\n  opacity: 0.6,\n  fontWeight: 400\n }\n})\n\nexport { useStyles };\n","import { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport BigNumberDisplay from \"components/BigNumberDisplay\";\nimport ContentLoader from \"components/ContentLoader\";\nimport { COMING_SOON } from \"consts\";\nimport useUsdValue from \"hooks/useUsdValue\";\nimport { PoolInfo } from \"services/api/addresses\";\nimport {\n  StyledImage,\n  StyledToken,\n  StyledTokenTexts,\n  StyledUsdValue,\n  useStyles,\n} from \"./styles\";\n\ninterface Props {\n  token: PoolInfo;\n  onSelect: () => void;\n}\n\nconst ListToken = ({ token, onSelect }: Props) => {\n  const classes = useStyles();\n  const { loading, usd } = useUsdValue(\n    token.tokenMinter!,\n    \"1\",\n    0,\n    token.isDisabled\n  );\n\n  return (\n    <StyledToken\n      color={token.color}\n      onClick={token.isDisabled ? () => {} : onSelect}\n      className={classes.token}\n      style={{\n        cursor: token.isDisabled ? \"\" : \"pointer\",\n        opacity: token.isDisabled ? 0.4 : 1,\n      }}\n    >\n      {token.image && <StyledImage src={token.image} alt=\"token\" />}\n      <StyledTokenTexts>\n        <Typography className=\"symbol\">\n          {token.displayName} {token.isDisabled ? COMING_SOON : \"\"}\n        </Typography>\n        <Typography className=\"name\">{token.name}</Typography>\n      </StyledTokenTexts>\n      <StyledUsdValue>\n        {loading ? (\n          <ContentLoader borderRadius=\"8px\" width={40} height={20} />\n        ) : (\n          <Typography>\n            <BigNumberDisplay prefix=\"$\" value={usd} decimalScale={7} />\n          </Typography>\n        )}\n      </StyledUsdValue>\n    </StyledToken>\n  );\n};\nexport default ListToken;\n","import { Box, IconButton, Link } from \"@mui/material\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport { styled } from \"@mui/styles\";\nimport useNotification from \"hooks/useNotification\";\n\nconst StyledAddressBox = styled(Box)({\n    display: \"flex\",\n    flex: 1,\n    alignItems: \"center\",\n    \"& a\": {\n      whiteSpace: \"nowrap\",\n      textOverflow: \"ellipsis\",\n      overflow: \"hidden\",\n      flex: 1,\n      paddingRight: 30\n    },\n  });\n  \n  const AddressText = ({ address }: { address: string }) => {\n    const { showNotification } = useNotification();\n  \n    const onCopy = () => {\n      showNotification({\n        message: <>Address copied</>,\n        variant: \"success\",\n        autoHideDuration: 4000,\n      });\n    };\n    return (\n      <StyledAddressBox className=\"address\">\n        <Link href={`https://tonscan.org/address/${address}`} target=\"_blank\">\n          {address}\n        </Link>\n        <CopyToClipboard text={address} onCopy={onCopy}>\n          <IconButton sx={{padding: 0}}>\n            <ContentCopyIcon style ={{color: '#50A7EA', width: 20, height: 20}} />\n          </IconButton>\n        </CopyToClipboard>\n      </StyledAddressBox>\n    );\n  };\n\n  export default AddressText","import { TextField, Typography } from \"@mui/material\";\nimport { styled } from \"@mui/styles\";\nimport { Box } from \"@mui/system\";\nimport { ActionButton, Popup } from \"components\";\nimport { useState } from \"react\";\nimport { PoolInfo } from \"services/api/addresses\";\nimport { Address, fromNano } from \"ton\";\nimport { convertToCurrencySystem, getRandomColor } from \"utils\";\nimport { getTokenData } from \"services/api\";\nimport { poolStateInit } from \"services/api/deploy-pool\";\nimport * as API from \"services/api\";\nimport TokenPreview from \"components/TokenPreview\";\nimport TonIcon from \"assets/images/tokens/ton.svg\";\nimport AddressText from \"components/AddressText\";\nimport FullPageLoader from \"components/FullPageLoader\";\nimport useNotification from \"hooks/useNotification\";\nimport { useTokensActions } from \"store/tokens/hooks\";\n\nconst StyledContainer = styled(Box)({\n  maxWidth: \"500px\",\n  width: \"100%\",\n  height: \"auto\",\n  background: \"white\",\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  padding: 20,\n  display: \"flex\",\n  flexDirection: \"column\",\n});\n\nconst StyledInputs = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: 15,\n  marginTop: 30,\n});\n\nconst StyledTitle = styled(Typography)({\n  fontSize: 26,\n  textAlign: \"center\",\n  fontWeight: 500,\n  marginBottom: 20\n});\n\nconst StyledInput = styled(Box)({\n  width: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  \"& input\": {},\n});\n\ninterface Props {\n  open: boolean;\n  onClose: () => void;\n}\n\ntype Token = {\n  name: string;\n  image?: string;\n  ammMinter: string;\n  tokenMinter: string;\n  symbol: string;\n};\n\ntype Pool = {\n  tonReserves: string;\n  tokenReserves: string;\n};\n\nfunction CustomToken({ open, onClose }: Props) {\n  const [isPoolDeployed, setIsPoolDeployed] = useState(false);\n  const [token, setToken] = useState<Token | undefined>();\n  const [pool, setPool] = useState<Pool | undefined>();\n  const [getTokenLoading, setGetTokenLoading] = useState(false);\n  const [jettonAddress, setJettonAddress] = useState(\"\");\n  const { showNotification } = useNotification();\n  const {addToken} = useTokensActions()\n\n  const create = (tokenData: Token) => {\n    try {\n      const newToken: PoolInfo = {\n        name: tokenData.name,\n        ammMinter: tokenData.ammMinter,\n        tokenMinter: tokenData.tokenMinter,\n        color: getRandomColor(),\n        displayName: tokenData.symbol.toUpperCase(),\n        image: tokenData.image,\n        isCustom: true,\n      };\n\n      addToken(newToken);\n      onClose();\n    } catch (error) {}\n  };\n\n  const onChange = async (e: any) => {\n    const value = e.target.value;\n    setJettonAddress(value);\n    if (value.length !== 48) {\n      return;\n    }\n\n    let address;\n    try {\n      address = Address.parse(value);\n    } catch (error) {\n      showNotification({ message: \"Invalid address\", variant: \"error\" });\n\n      return;\n    }\n\n    try {\n      setGetTokenLoading(true);\n      const jettonData = await getTokenData(address);\n\n      const { futureAddress, isDeployed } = await poolStateInit(value, 0);\n\n      if (isDeployed) {\n        const poolData = await API.getPoolData(futureAddress);\n        setPool({\n          tokenReserves: parseFloat(fromNano(poolData.tokenReserves)).toFixed(\n            2\n          ),\n          tonReserves: parseFloat(fromNano(poolData.tonReserves)).toFixed(2),\n        });\n      }\n      \n      setToken({\n        ...jettonData,\n        tokenMinter: value,\n        ammMinter: futureAddress.toFriendly(),\n      });\n      console.log(isDeployed);\n\n      setIsPoolDeployed(isDeployed);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setGetTokenLoading(false);\n    }\n  };\n\n  const onCreate = () => {\n    if (token) {\n      create(token);\n    }\n  };\n\n\n  return (\n    <Popup open={open} onClose={onClose}>\n      <FullPageLoader open={getTokenLoading}>\n        <Typography>Loading...</Typography>\n      </FullPageLoader>\n      <StyledContainer>\n        <StyledTitle>Add custom token</StyledTitle>\n        <StyledInput>\n          <TextField\n            label=\"Jetton address\"\n            onChange={onChange}\n            value={jettonAddress}\n          />\n        </StyledInput>\n\n        {token && (\n          <>\n          \n            <StyledTokenDetails>\n              <TokenPreview\n                name={token.name.toUpperCase()}\n                image={token.image}\n              />\n              <StyledTokenDetailsAddress>\n                <StyledSectionTitle>Amm minter: </StyledSectionTitle>\n                <AddressText address={token.ammMinter} />\n              </StyledTokenDetailsAddress>\n            </StyledTokenDetails>\n\n            {pool && (\n              <StyledReserves>\n                <StyledSectionTitle>\n                  Pool Reservers {token.name.toUpperCase()}-TON\n                </StyledSectionTitle>\n                  <StyledReservesFlex>\n                  <StyledReserve>\n                  <TokenPreview\n                    name={token.name.toUpperCase()}\n                    image={token.image}\n                  />\n                  <StyledReserveAmount>\n                    {convertToCurrencySystem(pool.tokenReserves)}\n                  </StyledReserveAmount>\n                </StyledReserve>\n\n                <StyledReserve>\n                  <TokenPreview\n                    name={'TON'}\n                    image={TonIcon}\n                  />\n                  <StyledReserveAmount>\n                    {convertToCurrencySystem(pool.tonReserves)}\n                  </StyledReserveAmount>\n                </StyledReserve>\n                  </StyledReservesFlex>\n              </StyledReserves>\n            )}\n          </>\n        )}\n\n        <Box marginTop=\"50px\">\n          <ActionButton isDisabled={!isPoolDeployed} onClick={onCreate}>\n            Add token\n          </ActionButton>\n        </Box>\n      </StyledContainer>\n    </Popup>\n  );\n}\n\nexport default CustomToken;\n\n\nconst StyledTokenDetails = styled(Box)({\n  marginTop: 30,\n \n});\n\n\nconst StyledTokenDetailsAddress = styled(Box)({\n  marginTop: 20,\n \n})\n\nconst StyledSectionTitle = styled(Typography)({\n  fontSize: 16,\n    fontWeight: 500,\n    marginBottom: 10\n})\n\nconst StyledReservesFlex = styled(Box)({\n  display:'flex',\n  flexDirection:'column',\n  gap:20\n})\n\n\nconst StyledReserves = styled(Box)({\n  marginTop: 20\n})\n\n\nconst StyledReserve = styled(Box)({\ndisplay:'flex',\nalignItems:'center',\n})\n\n\nconst StyledReserveAmount = styled(Box)({\n  marginLeft: 10\n})","import { Box } from \"@mui/material\";\nimport { Title } from \"components\";\nimport { useStyles } from \"./styles\";\nimport Fade from \"@mui/material/Fade\";\nimport { useEffect, useState } from \"react\";\nimport ListToken from \"./ListToken\";\nimport CustomToken from \"./CustomToken\";\nimport { useTokensStore } from \"store/tokens/hooks\";\nimport { styled } from \"@mui/system\";\nimport { useTokenOperationsActions } from \"store/token-operations/hooks\";\nimport { PoolInfo } from \"services/api/addresses\";\n\ninterface Props {\n  title: string;\n  onTokenSelect: (name: string) => void;\n}\n\nexport const Tokens = ({ title, onTokenSelect }: Props) => {\n  const classes = useStyles();\n  const [addTokenModal, setAddTokenModal] = useState(false);\n  const { selectToken } = useTokenOperationsActions();\n  const { clearStore } = useTokenOperationsActions();\n  const { tokens } = useTokensStore();\n\n  useEffect(() => {\n    selectToken(undefined);\n    clearStore();\n  }, []);\n\n  return (\n    <Fade in timeout={300}>\n      <Box className={classes.root}>\n        <CustomToken\n          open={addTokenModal}\n          onClose={() => setAddTokenModal(false)}\n        />\n        <StyledTitle>\n          <Title>{title}</Title>\n        </StyledTitle>\n        <Box className={classes.lists}>\n          <StyledContainer>\n            {/* <Grid item sm={4} md={3}>\n              <StyledAddTokenButton onClick={() => setAddTokenModal(true)}>\n                <AddIcon style={{ fontSize: 30 }} />\n                <StyledAddTokenButtonText>\n                  Import Token\n                </StyledAddTokenButtonText>\n              </StyledAddTokenButton>\n            </Grid> */}\n            {tokens.map((token: PoolInfo) => {\n              return (\n                <ListToken\n                  key={token.tokenMinter}\n                  onSelect={() => onTokenSelect(token.tokenMinter)}\n                  token={token}\n                />\n              );\n            })}\n          </StyledContainer>\n        </Box>\n      </Box>\n    </Fade>\n  );\n};\n\nconst StyledContainer = styled(Box)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: 11,\n  maxWidth: 380,\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  minHeight: 300,\n});\n\nconst StyledTitle = styled(Box)({\n  position: \"sticky\",\n  top: 54,\n  background: \"white\",\n  zIndex: 1,\n  paddingBottom: 10,\n});\n"],"names":["value","decimalScale","prefix","displayType","thousandSeparator","height","bgcolor","variant","width","style","borderRadius","sx","StyledContainer","styled","Box","display","flexDirection","alignItems","gap","open","children","adapterId","useWalletStore","showReminderInLoader","isMobile","Adapters","color","zIndex","theme","drawer","backdropFilter","maxWidth","background","marginLeft","marginRight","overflow","position","padding","marginTop","StyledOption","cursor","justifyContent","p","fontSize","pointerEvents","StyledSelected","transition","allowTransition","border","boxShadow","top","transform","SlidingMenuItem","item","onSelect","selected","index","symbol","useEffect","onClick","method","fontWeight","text","items","action","useState","left","setLeft","setWidth","setAllowTransition","containerRef","useRef","montedRef","useTokenOperationsStore","srcLoading","destLoading","current","_width","getBoundingClientRect","length","setTimeout","isLoading","ref","map","toLowerCase","objectFit","image","name","className","src","DefaultTokenIcon","toUpperCase","StyledMessage","useSnackbar","enqueueSnackbar","closeSnackbar","showNotification","useCallback","message","onClose","autoHideDuration","anchorOrigin","key","id","useParams","getTokenById","useTokensActions","selectToken","useTokenOperationsActions","navigate","useNavigateWithParams","token","ROUTES","tokenId","debounce","disabled","usd","setUsd","loading","setLoading","debounceMilliseconds","timeoutRef","clearTimeout","getUsdAmount","result","useStyles","makeStyles","content","flex","cards","button","marginBottom","breakpoints","down","StyledLoader","NumberInput","onChange","placeholder","ContentLoader","inputProps","textIndent","inputMode","autoComplete","customInput","TextField","DECIMALS_LIMIT","decimalSeparator","onValueChange","event","source","console","log","ton","Ton","StyledMaxButton","availableAmount","onMaxAmountClick","showMax","Typography","component","textAlign","BigNumberDisplay","useUsdValue","usdLoading","inputAmount","balanceLoading","balance","onMaxAmount","expanded","useIsExpandedView","operationType","useApplicationStore","address","isTon","StyledBg","StyledInput","val","StyledTokenDisplay","userSelect","OperationType","StyledAvatar","alt","displayName","StyledBottom","tokenMinter","whiteSpace","textOverflow","borderLeft","borderBottom","Avatar","paddingRight","input","opacity","srcTokenName","getAmountFunc","destTokenAmount","totalBalances","destAvailableAmountLoading","inInput","updateDestTokenAmount","updateSrcTokenAmount","updateSrcTokenLoading","onInputChange","balanceRef","useDebouncedCallback","jetton","calculateTokens","toNano","fromNano","InInput","destBalance","destTokenName","maxAmount","srcTokenAmount","srcAvailableAmountLoading","updateDestTokenLoading","Number","srcBalance","StylesIcon","fill","icon","actionType","txConfirmation","txSuccess","closeSuccessModal","createComponent","ActionType","Container","title","tokenName","StyledHeader","SuccessIcon","StyledChildren","useMemo","gasFee","srcToken","txPending","fee","toFixed","insufficientFunds","maxAmountTemp","toNanoSafe","sub","gt","srcError","destError","txError","hideTxError","setOpen","delay","StyledContent","destToken","submitButtonText","getBalances","getTxRequest","refreshAmountsOnActionChange","actionCategory","classes","toggleModal","useWalletModalToggle","session","successMessage","useTxSuccessMessage","useValidation","onResetAmounts","getTokensBalance","resetTokensBalance","sendTransaction","onSubmit","tx","txRequest","waitForSeqno","client","Address","waiter","walletService","gaAnalytics","isDisabled","WarningAmberRounded","amount","API","isTonToToken","srcAmount","destAmount","getAmountsFunc","toString","root","paddingBottom","lists","list","menu","StyledImage","StyledUsdValue","StyledToken","StyledTokenTexts","borderSpacing","borderStyle","borderWidth","borderColor","COMING_SOON","StyledAddressBox","useNotification","Link","href","target","onCopy","IconButton","ContentCopy","StyledTitle","isPoolDeployed","setIsPoolDeployed","setToken","pool","setPool","getTokenLoading","setGetTokenLoading","jettonAddress","setJettonAddress","addToken","e","getTokenData","jettonData","poolStateInit","futureAddress","isDeployed","poolData","tokenReserves","parseFloat","tonReserves","ammMinter","toFriendly","FullPageLoader","label","StyledTokenDetails","TokenPreview","StyledTokenDetailsAddress","StyledSectionTitle","StyledReserves","StyledReservesFlex","StyledReserve","StyledReserveAmount","convertToCurrencySystem","TonIcon","tokenData","newToken","getRandomColor","isCustom","error","create","Tokens","onTokenSelect","addTokenModal","setAddTokenModal","clearStore","tokens","useTokensStore","undefined","Fade","in","timeout","minHeight"],"sourceRoot":""}