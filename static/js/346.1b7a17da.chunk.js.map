{"version":3,"file":"static/js/346.1b7a17da.chunk.js","mappings":"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","sources":["screens/swap/Buy.tsx","screens/swap/Sell.tsx","screens/swap/index.tsx","../node_modules/@mui/icons-material/SouthRounded.js"],"sourcesContent":["import * as API from \"services/api\";\nimport TokenOperations from \"screens/components/TokenOperations\";\nimport SouthRoundedIcon from \"@mui/icons-material/SouthRounded\";\nimport { ton } from \"services/api/addresses\";\nimport { useTokenOperationsStore } from \"store/token-operations/hooks\";\nimport { useTokensStore } from \"store/tokens/hooks\";\nimport useTokenFromParams from \"hooks/useTokenFromParams\";\nimport { ActionCategory, ActionType } from \"services/wallets/types\";\nimport { Typography } from \"@mui/material\";\nimport { useCallback, useMemo } from \"react\";\nimport { Box } from \"@mui/system\";\n\nconst Buy = () => {\n  const { srcTokenAmount, destTokenAmount, selectedToken } =\n    useTokenOperationsStore();\n  const { totalBalances } = useTokenOperationsStore();\n\n  const getTxRequest = async () => {\n    return API.generateBuyLink(\n      selectedToken!!.tokenMinter,\n      srcTokenAmount,\n      destTokenAmount\n    );\n  };\n\n  const getBalances = () => {\n    return Promise.all([\n      API.getTonBalance(),\n      API.getTokenBalance(selectedToken!!),\n    ]);\n  };\n\n\n\n\n  useTokenFromParams();\n\n  if (!selectedToken) {\n    return null;\n  }\n\n  return (\n    <TokenOperations\n      icon={<SouthRoundedIcon />}\n      getTxRequest={getTxRequest}\n      getAmountFunc={API.getAmountsOut}\n      getBalances={getBalances}\n      srcToken={ton}\n      destToken={selectedToken}\n      submitButtonText={`Buy ${selectedToken?.displayName}`}\n      refreshAmountsOnActionChange={\n        !totalBalances.destBalance && !totalBalances.srcBalance\n      }\n      actionCategory={ActionCategory.SWAP}\n      actionType={ActionType.BUY}\n      gasFee={API.GAS_FEE.SWAP}\n    />\n  );\n};\n\nexport default Buy;\n","import TokenOperations from \"screens/components/TokenOperations\";\nimport * as API from \"services/api\";\n\nimport { ton } from \"services/api/addresses\";\nimport { useTokenOperationsStore } from \"store/token-operations/hooks\";\nimport useTokenFromParams from \"hooks/useTokenFromParams\";\nimport SouthRoundedIcon from \"@mui/icons-material/SouthRounded\";\nimport { ActionCategory, ActionType } from \"services/wallets/types\";\n\nconst Sell = () => {\n  const { srcTokenAmount, destTokenAmount, selectedToken } = useTokenOperationsStore();\n  const { totalBalances } = useTokenOperationsStore();\n\n  const getTxRequest = () => {\n    return API.generateSellLink(\n      selectedToken!.tokenMinter,\n      srcTokenAmount,\n      destTokenAmount\n    )\n  };\n\n  const getBalances = () => {\n    return Promise.all([\n      API.getTokenBalance(selectedToken!!),\n      API.getTonBalance(),\n    ]);\n  };\n\n\n  useTokenFromParams();\n\n  if (!selectedToken) {\n    return null;\n  }\n\n \n\n  return (\n    <TokenOperations\n      icon={<SouthRoundedIcon />}\n      getTxRequest={getTxRequest}\n      getAmountFunc={API.getAmountsOut}\n      getBalances={getBalances}\n      srcToken={selectedToken}\n      destToken={ton}\n      submitButtonText={`Sell ${selectedToken?.displayName}`}\n      refreshAmountsOnActionChange={\n        !totalBalances.destBalance && !totalBalances.srcBalance\n      }\n      actionCategory={ActionCategory.SWAP}\n      actionType={ActionType.SELL}\n      gasFee={API.GAS_FEE.SWAP}\n    />\n  );\n};\n\nexport default Sell;\n","import SlidingMenu from \"components/SlidingMenu\";\nimport useNavigateWithParams from \"hooks/useNavigateWithParams\";\nimport { useCallback, useMemo } from \"react\";\nimport { Route, Routes, useParams } from \"react-router-dom\";\nimport { ROUTES } from \"router/routes\";\nimport { Tokens } from \"screens/components/Tokens\";\nimport {\n  useTokenOperationsActions,\n  useTokenOperationsStore,\n} from \"store/token-operations/hooks\";\nimport { getActionFromParams } from \"utils\";\nimport Buy from \"./Buy\";\nimport Sell from \"./Sell\";\n\nfunction SwapScreen() {\n  const { selectedToken } = useTokenOperationsStore();\n  const { toggleBuyToSell, toggleSellToBuy } = useTokenOperationsActions();\n  const navigate = useNavigateWithParams();\n  const params = useParams();\n  const action = getActionFromParams(params);\n\n  const menuItems = useMemo(\n    () =>\n      selectedToken\n        ? [\n            {\n              text: \"Buy\",\n              method: toggleSellToBuy,\n            },\n            {\n              text: \"Sell\",\n              method: toggleBuyToSell,\n            },\n          ]\n        : [],\n    [navigate, selectedToken]\n  );\n\n  const onTokenSelect = useCallback(\n    (tokenId: string) => {\n      navigate(ROUTES.swap.navigateToBuy.replace(\":id\", tokenId));\n    },\n    [navigate]\n  );\n  return (\n    <>\n      {selectedToken && (\n        <SlidingMenu\n          symbol={selectedToken.displayName}\n          items={menuItems}\n          action={action}\n        />\n      )}\n\n      <Routes>\n        <Route path={ROUTES.swap.buy} element={<Buy />} />\n        <Route path={ROUTES.swap.sell} element={<Sell />} />\n        <Route\n          path={ROUTES.swap.tokens}\n          element={\n            <Tokens\n              onTokenSelect={onTokenSelect}\n              title=\"Jettons available for trade\"\n            />\n          }\n        />\n      </Routes>\n    </>\n  );\n}\n\nexport default SwapScreen\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18.3 14.29a.9959.9959 0 0 0-1.41 0L13 18.17V3c0-.55-.45-1-1-1s-1 .45-1 1v15.18L7.12 14.3a.9959.9959 0 0 0-1.41 0c-.39.39-.39 1.02 0 1.41l5.59 5.59c.39.39 1.02.39 1.41 0l5.59-5.59c.38-.39.38-1.03 0-1.42z\"\n}), 'SouthRounded');\n\nexports.default = _default;"],"names":["useTokenOperationsStore","srcTokenAmount","destTokenAmount","selectedToken","totalBalances","getTxRequest","API","tokenMinter","useTokenFromParams","TokenOperations","icon","SouthRounded","getAmountFunc","getBalances","Promise","all","srcToken","ton","destToken","submitButtonText","displayName","refreshAmountsOnActionChange","destBalance","srcBalance","actionCategory","ActionCategory","actionType","ActionType","gasFee","useTokenOperationsActions","toggleBuyToSell","toggleSellToBuy","navigate","useNavigateWithParams","params","useParams","action","getActionFromParams","menuItems","useMemo","text","method","onTokenSelect","useCallback","tokenId","ROUTES","SlidingMenu","symbol","items","path","element","Tokens","title","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}